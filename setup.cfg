# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = jdrones
description = PyBullet models prepared for usage via the gymnasium environment
author = iwishiwasaneagle
author_email = jh.ewers@gmail.com
license = GPL-3.0-or-later
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/iwishiwasaneagle/jdrones/
# Add here related links, for example:
project_urls =
    Source = "https://github.com/iwishiwasaneagle/jdrones"

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = Linux

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 3 - Alpha
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
    Natural Language :: English
    Operating System :: Unix
    Topic :: Scientific/Engineering

[options]
zip_safe = False

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Top level view of the package deps
# https://stackoverflow.com/questions/14399534/reference-requirements-txt-for-the-install-requires-kwarg-in-setuptools-setup-py
install_requires =
    importlib-metadata; python_version<"3.8"

    loguru
    numpy
    gymnasium
    pybullet
    pydantic

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install jpdmgen[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
# pip install -e ".[test]"
test =
    setuptools
    pytest
    pytest-cov
    tox

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = jpdmgen.module:function
# For example:
# console_scripts =
#     fibonacci = jpdmgen.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
per-file-ignores =
    # Unused import errors
    __init__.py: F401

[mypy]
plugins = numpy.typing.mypy_plugin
ignore_missing_imports = True
